{
	"nodes":[
		{"type":"group","id":"50103132665c6247","x":660,"y":-606,"width":2420,"height":3366,"label":"belts"},
		{"type":"group","id":"c5aa5085a02482ed","x":4520,"y":-606,"width":1340,"height":700,"label":"inserters"},
		{"type":"group","id":"138242df7e82c94d","x":3160,"y":-606,"width":1280,"height":646,"label":"hoppers"},
		{"type":"group","id":"793679169acb7bbf","x":720,"y":860,"width":1980,"height":1840,"label":"belt movement"},
		{"type":"group","id":"0ffd54c3223ac812","x":5940,"y":-606,"width":720,"height":835,"label":"general movement"},
		{"type":"group","id":"32298ab22cf020d6","x":757,"y":1960,"width":908,"height":540,"color":"6","label":"line-based movement for belts"},
		{"type":"group","id":"dcf7df2746a43d70","x":757,"y":1360,"width":905,"height":488,"label":"individual belt aproach"},
		{"type":"group","id":"84866a417db088ab","x":720,"y":460,"width":1280,"height":300,"label":"belt placing"},
		{"type":"text","text":"orange: TODO\nred: TO define\ngreen: DONE\nyellow: TODO long term\npurple: denied\n\nname: factory\nversion: 1.18\n\nmust do:\n- sqlite \n- mysql server\nability to choose between them\n\nlow prio:\n- quantum bridges\n- terminals?\n- storage units\n- debug card\n- mining\n- energy\n- upgrades\n- beacons\n- limit cheacking, after X attemps it stops the machine until user gets back and manually starts it\n- https://wiki.industrial-craft.net/index.php?title=Recipes_and_Resources\n- attack machines and defense machines\n- line control machine\n- https://refinedmods.com/refined-storage/wiki/grid.html\n- resource pack\n- filters\n- producers\n- convert locations to x y z world and see if its faster than converting string -> location","id":"01636e57ab0efec8","x":-33,"y":-582,"width":380,"height":1115,"color":"5"},
		{"type":"text","text":"each position has a set of items","id":"a1b13af5a7061381","x":739,"y":-586,"width":250,"height":60,"color":"2"},
		{"type":"text","text":"has to be stored in sql datbase","id":"77d320589a573879","x":1009,"y":-586,"width":250,"height":60,"color":"2"},
		{"type":"text","text":"each belt has a target to deliver items and a source","id":"652369b94d0eb9f5","x":1279,"y":-586,"width":250,"height":60,"color":"2"},
		{"type":"text","text":"starting from all blocks with no target\n\n```\nskipNext = false\nif current is full:\n skipNext = true\n continue\nelse:\n if skipNext:\n  continue\n  skipNext = false\n else:\n  current is not full and next is not full\n  moveItems()\n```","id":"059aafd8667b7d0b","x":760,"y":880,"width":360,"height":400,"color":"6"},
		{"type":"text","text":"to store new items in given belt location\nINSERT INTO belt_items (belt_id, item_name) VALUES (1, 'item0'), (1, 'item1'), (1, 'item2');\n\nto get belt id from location\nSELECT id FROM belts WHERE location = 'Living Room';\n\n","id":"bd24a19aa71a0e69","x":1134,"y":-209,"width":695,"height":150,"color":"6"},
		{"type":"text","text":"to move items","id":"9e6d5c4c0031a013","x":1780,"y":1514,"width":250,"height":60,"color":"2"},
		{"type":"text","text":"querys for each movement:\npros:\n- less cpu usage as theres no need to save movements in list\n- less liquely of data corruption\n\ncons:\n- lots of sql server usage\n","id":"028dab28adc25ced","x":1780,"y":1660,"width":340,"height":358,"color":"2"},
		{"type":"text","text":"idea: \n\n`select * from belts where target != full`\nproblem: target is varchar with location, could be used to get id of belt and with that get target.content ","id":"4e5ce3356a940c16","x":777,"y":1380,"width":479,"height":137,"color":"6"},
		{"type":"text","text":"SELECT b.*, t.content as target_content\nFROM belts b\nJOIN belts t ON t.location = b.target\nWHERE b.target != 'full'\n","id":"21989884c3d41d63","x":1077,"y":1540,"width":525,"height":118,"color":"6"},
		{"type":"text","text":"SELECT b.*, t.content as target_content\nFROM belts b\nJOIN targets t ON t.belt_id = b.id\nWHERE b.target != 'full'\n  AND t.location = b.target\n","id":"b0bf036ad5f52a4a","x":1077,"y":1680,"width":525,"height":148,"color":"6"},
		{"type":"text","text":"get all ends of lines\n\ngo backwards in line and move items","id":"f674dd16dbd2626f","x":1060,"y":2010,"width":250,"height":107,"color":"2"},
		{"type":"text","text":"`select * from belts where target is null`","id":"7a3de2da062659f6","x":777,"y":1995,"width":250,"height":60,"color":"6"},
		{"type":"text","text":"missing splitters","id":"c198109b8c891e4a","x":777,"y":2093,"width":250,"height":60,"color":"1"},
		{"type":"text","text":"on place of belt\nif targeted block is belt\nsave new belt in belts with same line_id\nelse create new line and save in belts with given line_id","id":"4a97f5e7480e1228","x":740,"y":480,"width":250,"height":260,"color":"2"},
		{"type":"text","text":"in memory storage for quick access and movement as a list of belt objects\n","id":"5f229ecb1aeba350","x":739,"y":-506,"width":250,"height":117,"color":"6"},
		{"type":"text","text":"each location (belt) has:\n- holding: list of itemstacks\n- target: location to deliver items","id":"0f66277c7debb3c0","x":739,"y":-259,"width":321,"height":174,"color":"6"},
		{"type":"text","text":"belt movement could be made via memory and once it arrives destination the items get saved in sql\n\nin case of sudden lose of data it would reset to stored in factories","id":"2d7e6aacd54883b7","x":1134,"y":-486,"width":250,"height":227,"color":"6"},
		{"type":"text","text":"doesnt consider splitting","id":"71d3a6846e6ee2dc","x":1202,"y":1051,"width":250,"height":60,"color":"6"},
		{"type":"text","text":"instead of moving strings \nbelt_items.belt_id could be replaced with new value, avoiding data corruption, lag\n\nand to move certain amount of that item in case item is present in target, amount could be modified to simple change the amount each belt has of that item ","id":"97e3e82ad4580b1e","x":2100,"y":1280,"width":520,"height":209,"color":"2"},
		{"type":"text","text":"save movements in list, send them to function and make function iterate over them? :\n pros:\n - less querys as function could take all modified values and find optimal way of editing them \n\ncons:\n- possible data corruption if user adds item to belt as function is saving them in sql ","id":"e3fae01f8271a232","x":2151,"y":1658,"width":418,"height":358,"color":"3"},
		{"type":"text","text":"create a belt class? ","id":"1034a7410d2d3d68","x":740,"y":85,"width":250,"height":101,"color":"2"},
		{"type":"text","text":"https://github.dev/songoda/EpicFurnaces/blob/master/src/main/java/com/songoda/epicfurnaces/database/migrations/_1_InitialMigration.java","id":"e243a1182b7aea3b","x":-729,"y":-735,"width":250,"height":177},
		{"type":"text","text":"https://github.com/songoda/SongodaCore/tree/master/Core/src/main/java/com/songoda/core/database","id":"5a999571098a75a5","x":-979,"y":-735,"width":250,"height":177},
		{"type":"text","text":"mysql connection example","id":"8be5b7a68103b0d1","x":-979,"y":-527,"width":250,"height":60},
		{"type":"text","text":"how to use this mysql connection","id":"ab4703e89b7c1f65","x":-729,"y":-527,"width":250,"height":60},
		{"type":"text","text":"add: \n**Important**  \n  \n**By downloading and using this plugin, you agree to not alter its contents or pirate it in any way. You also agree to not steal the source code and claim it as yours for your own personal gain. The source code is available to help others and for you to give feedback on the plugin.**Â **Please leave the reviews section only for legitimate reviews. If you have suggestions/complaints/concerns, PM me here or let me know on the GitHub repository page.**\n\nhttps://www.spigotmc.org/resources/parkour.30599/","id":"c9e77c730825c6f1","x":-979,"y":-380,"width":760,"height":276},
		{"type":"text","text":"on belt placement, if targeted block is wool get location of targeted block and get blets.line_id","id":"2afca20db7f25937","x":777,"y":2320,"width":250,"height":160,"color":"2"},
		{"type":"text","text":"select lines.id from lines where enabled is True\n\nforeach lineID in lines_id","id":"9b67a6256077357e","x":1343,"y":2325,"width":250,"height":151,"color":"2"},
		{"type":"text","text":"save new belt with same line_id","id":"0200572ed7a71962","x":1060,"y":2325,"width":250,"height":60,"color":"2"},
		{"type":"text","text":"else create new lines.id and save it with that one","id":"d92cefe866cff6dc","x":1060,"y":2416,"width":250,"height":60,"color":"2"},
		{"type":"text","text":"just change belt_id to move items","id":"aa9466e68c429eee","x":902,"y":2182,"width":250,"height":58,"color":"2"},
		{"type":"text","text":"select * from belts where line_id is lineID and target is null (target null so its end of line)","id":"da42b7d9558bcbf9","x":1185,"y":2153,"width":250,"height":117,"color":"2"},
		{"type":"text","text":"if target is not full\n\nfind same item and just deal with belt_items.amount on each belt_items.id","id":"35c6585e479ddc08","x":1343,"y":1995,"width":297,"height":138,"color":"2"},
		{"type":"text","text":"ability to choose between them","id":"97ae4128ba75d67c","x":1995,"y":2087,"width":250,"height":60,"color":"3"},
		{"type":"text","text":"store hashmap \nlocation -> id to avoid 2 querys?","id":"df449f3a6f6f464d","x":1357,"y":-2,"width":250,"height":87,"color":"6"},
		{"type":"text","text":"crafters\n","id":"399e885cf50475e3","x":495,"y":-1427,"width":250,"height":60},
		{"type":"text","text":"cancel in case of redstone so it doesnt move blocks","id":"3de07322e99bd932","x":4820,"y":-429,"width":250,"height":60,"color":"2"},
		{"type":"text","text":"inserters dont hold items, just insert them into a #crafter","id":"56456c95cd50e1bc","x":5070,"y":-586,"width":280,"height":87,"color":"2"},
		{"type":"text","text":"if enabled\nget items in source_id\nif any items\nget items in target_id\nif empty space in target_id.items: move items\nif found same item: move amount","id":"e6532c90fcb3629a","x":5420,"y":-576,"width":407,"height":177,"color":"2"},
		{"type":"text","text":"","id":"f87fe9d7e7238967","x":5860,"y":-654,"width":80,"height":136},
		{"type":"text","text":"to move items select from storage and go backwards in line","id":"4fbe6316097c785a","x":1435,"y":2560,"width":250,"height":87,"color":"2"},
		{"type":"text","text":"use breadth-first search (BFS) algorithm\n\n\n```\nevery X seconds:\n iterate over all lines: get storages for each line\n foreach(storage in storages):\n   if storage is full: continue\n   get storage.source from sql \n   if storage.source.processed is True: continue\n   \n   add all storage.source to new_sources\n\n   foreach(actual in new_sources):\n     if actual.processed is True: continue\n     process actual\n     mark actual as processed\n     add all sources from sql of actual to new_sources at end of list\n```","id":"763750dc15f3cedb","x":5960,"y":-586,"width":680,"height":566,"color":"2"},
		{"type":"text","text":"once storage is full mark as full and only process not full ones, add event listener to when items are taken out of this torage unit and readd it to unfull list\n","id":"28f698a712e41dba","x":5960,"y":20,"width":250,"height":189,"color":"1"},
		{"type":"text","text":"get location , get block in location, get inventory and process","id":"3653153717b8b7dc","x":3500,"y":-342,"width":250,"height":87,"color":"2"},
		{"type":"text","text":"add event listener for blockPistonEvent\ncheck if sticky, get location and check if its in inserters.location","id":"9ff9a8738171c12f","x":4540,"y":-473,"width":250,"height":147,"color":"2"},
		{"type":"text","text":"sticky pistons as inserters","id":"d2d9afac516ae718","x":4540,"y":-573,"width":250,"height":60,"color":"2"},
		{"type":"text","text":"save location of all hoppers, iterate over them and get items \n\nselect * from hoppers if enabled is True and target_id is not null","id":"91332d27ba1d6f98","x":3500,"y":-581,"width":250,"height":197,"color":"2"},
		{"type":"text","text":"items are not gonna get stored in sql, just grab hopper, get ites items and remove them, then add them to sql ","id":"68a089678a9e8eb7","x":3784,"y":-556,"width":250,"height":147,"color":"2"},
		{"type":"text","text":"check if block is loaded ","id":"2ccf0590d6ad8e75","x":3784,"y":-328,"width":250,"height":60,"color":"2"},
		{"type":"text","text":"item picking\n","id":"0b033f31d8658533","x":3180,"y":-543,"width":250,"height":60,"color":"2"},
		{"type":"text","text":"at first could be just normal picking up ","id":"353a0998fecad660","x":3180,"y":-452,"width":250,"height":60,"color":"2"},
		{"type":"text","text":"add chunk hopper","id":"6bba8782d196aec8","x":3180,"y":-358,"width":250,"height":60,"color":"3"},
		{"type":"text","text":"on place of hopper, if target in belts, autoconnect ","id":"125f103b89d7e6d1","x":3180,"y":-160,"width":250,"height":60,"color":"4"},
		{"type":"text","text":"add multiple source \nsplitting\nfiltering","id":"3608558eb55f0ad7","x":4540,"y":-260,"width":250,"height":87,"color":"1"}
	],
	"edges":[
		{"id":"bc902e9faf2328a4","fromNode":"a1b13af5a7061381","fromSide":"right","toNode":"77d320589a573879","toSide":"left"},
		{"id":"08105dabf176bd8b","fromNode":"77d320589a573879","fromSide":"right","toNode":"652369b94d0eb9f5","toSide":"left"},
		{"id":"6f3f18f04827c2cb","fromNode":"a1b13af5a7061381","fromSide":"bottom","toNode":"5f229ecb1aeba350","toSide":"top"},
		{"id":"011cf985ed932516","fromNode":"5f229ecb1aeba350","fromSide":"bottom","toNode":"0f66277c7debb3c0","toSide":"top"},
		{"id":"2bed5fc0d284c7e8","fromNode":"5f229ecb1aeba350","fromSide":"right","toNode":"2d7e6aacd54883b7","toSide":"left"},
		{"id":"ac75d9e9502ac2fb","fromNode":"bd24a19aa71a0e69","fromSide":"bottom","toNode":"df449f3a6f6f464d","toSide":"top"},
		{"id":"17fff2334afa9cd4","fromNode":"059aafd8667b7d0b","fromSide":"right","toNode":"71d3a6846e6ee2dc","toSide":"left"},
		{"id":"18ac23e2f7b456a4","fromNode":"4e5ce3356a940c16","fromSide":"bottom","toNode":"21989884c3d41d63","toSide":"left"},
		{"id":"09f3db13f3373a95","fromNode":"4e5ce3356a940c16","fromSide":"bottom","toNode":"b0bf036ad5f52a4a","toSide":"left"},
		{"id":"42150c50b631707b","fromNode":"7a3de2da062659f6","fromSide":"right","toNode":"f674dd16dbd2626f","toSide":"left"},
		{"id":"60a4b51ad9f3fbe1","fromNode":"f674dd16dbd2626f","fromSide":"right","toNode":"35c6585e479ddc08","toSide":"left"},
		{"id":"7a11df58b3c36bce","fromNode":"f674dd16dbd2626f","fromSide":"bottom","toNode":"aa9466e68c429eee","toSide":"top"},
		{"id":"c20411707aa615ca","fromNode":"9e6d5c4c0031a013","fromSide":"bottom","toNode":"028dab28adc25ced","toSide":"top"},
		{"id":"6e6d52fb76828241","fromNode":"9e6d5c4c0031a013","fromSide":"right","toNode":"e3fae01f8271a232","toSide":"top"},
		{"id":"c957b4b545dddc4f","fromNode":"dcf7df2746a43d70","fromSide":"right","toNode":"9e6d5c4c0031a013","toSide":"left"},
		{"id":"c121c2ca53277661","fromNode":"32298ab22cf020d6","fromSide":"right","toNode":"9e6d5c4c0031a013","toSide":"left"},
		{"id":"f9cd81d8fda185f1","fromNode":"9e6d5c4c0031a013","fromSide":"right","toNode":"97e3e82ad4580b1e","toSide":"left"},
		{"id":"4324ac77e6ca67f3","fromNode":"5a999571098a75a5","fromSide":"bottom","toNode":"8be5b7a68103b0d1","toSide":"top"},
		{"id":"19d637fe75e97d0d","fromNode":"e243a1182b7aea3b","fromSide":"bottom","toNode":"ab4703e89b7c1f65","toSide":"top"},
		{"id":"b72b47ad5d4ef919","fromNode":"2afca20db7f25937","fromSide":"right","toNode":"0200572ed7a71962","toSide":"left"},
		{"id":"1546b4d5f32eeabc","fromNode":"0200572ed7a71962","fromSide":"right","toNode":"9b67a6256077357e","toSide":"left"},
		{"id":"b034c0ad42ef76f6","fromNode":"da42b7d9558bcbf9","fromSide":"top","toNode":"f674dd16dbd2626f","toSide":"bottom"},
		{"id":"739a86e8a7e67852","fromNode":"2afca20db7f25937","fromSide":"right","toNode":"d92cefe866cff6dc","toSide":"left"},
		{"id":"0314ad073babbfac","fromNode":"d92cefe866cff6dc","fromSide":"right","toNode":"9b67a6256077357e","toSide":"left"},
		{"id":"12b4613afe67cc53","fromNode":"da42b7d9558bcbf9","fromSide":"bottom","toNode":"9b67a6256077357e","toSide":"top"},
		{"id":"45e5a329b83b2794","fromNode":"028dab28adc25ced","fromSide":"bottom","toNode":"97ae4128ba75d67c","toSide":"top"},
		{"id":"fe0e936af556baed","fromNode":"e3fae01f8271a232","fromSide":"bottom","toNode":"97ae4128ba75d67c","toSide":"top"},
		{"id":"98dd0a138f55f202","fromNode":"0b033f31d8658533","fromSide":"bottom","toNode":"353a0998fecad660","toSide":"top"},
		{"id":"471d44a8f2317b89","fromNode":"353a0998fecad660","fromSide":"bottom","toNode":"6bba8782d196aec8","toSide":"top"},
		{"id":"04ea54275a2add68","fromNode":"0b033f31d8658533","fromSide":"right","toNode":"91332d27ba1d6f98","toSide":"left"},
		{"id":"b4b0fb35d0a38046","fromNode":"91332d27ba1d6f98","fromSide":"right","toNode":"68a089678a9e8eb7","toSide":"left"},
		{"id":"86761d4fad7d9332","fromNode":"91332d27ba1d6f98","fromSide":"bottom","toNode":"3653153717b8b7dc","toSide":"top"},
		{"id":"a9e2c3eba43cae3b","fromNode":"3653153717b8b7dc","fromSide":"right","toNode":"2ccf0590d6ad8e75","toSide":"left"},
		{"id":"9b310d7000b6d429","fromNode":"d2d9afac516ae718","fromSide":"bottom","toNode":"9ff9a8738171c12f","toSide":"top"},
		{"id":"bacfcb76f1b70ebb","fromNode":"9ff9a8738171c12f","fromSide":"right","toNode":"3de07322e99bd932","toSide":"left"},
		{"id":"8b8609bf481a6444","fromNode":"d2d9afac516ae718","fromSide":"right","toNode":"56456c95cd50e1bc","toSide":"left"},
		{"id":"ba84e3b9993b58a6","fromNode":"56456c95cd50e1bc","fromSide":"right","toNode":"e6532c90fcb3629a","toSide":"left"},
		{"id":"47787c0f6e78c747","fromNode":"4fbe6316097c785a","fromSide":"right","toNode":"9e6d5c4c0031a013","toSide":"left"}
	]
}